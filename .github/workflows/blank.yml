# name: Release

# on:
#   workflow_dispatch:
#  # Change this to your default branch if different

# jobs:
#   release:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: List directory contents
#         run: ls -la  # List files in the working directory


#       - name: Set up nvm
#         run: |
#           # Install nvm
#           curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
#           # Source nvm
#           export NVM_DIR="$HOME/.nvm"
#           [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
#           # Check if Node.js is installed
#           if ! command -v node &> /dev/null; then
#             echo "Node.js could not be found. Installing..."
#             nvm install 20
#           else
#             echo "Node.js is installed"
#           fi
#       - name: Create .releaserc.json if not exists
#         run: |
#           if [ ! -f .releaserc.json ]; then
#             echo '{
#               "branches": ["feature"],
#               "plugins": [
#                 "@semantic-release/commit-analyzer",
#                 "@semantic-release/release-notes-generator",
#                 "@semantic-release/github",
#                 "@semantic-release/git"
#               ]
#             }' > .releaserc.json
#           fi
    



name: Release

on:
  workflow_dispatch:  # Allows manual triggering from GitHub UI
  # If you want this to run on specific branches or events, you can change this:
  # push:
  #   branches:
  #     - main  # Replace with your default branch, e.g., 'main' or 'master'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: List directory contents
        run: ls -la  # List files in the working directory for debugging

      - name: Set up nvm
        run: |
          # Install nvm
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
          # Source nvm
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          # Check if Node.js is installed
          if ! command -v node &> /dev/null; then
            echo "Node.js could not be found. Installing..."
            nvm install 20
          else
            echo "Node.js is installed"
          fi

      - name: Create .releaserc.json if not exists
        run: |
          if [ ! -f .releaserc.json ]; then
            echo '{
              "branches": ["feature"],
              "plugins": [
                "@semantic-release/commit-analyzer",
                "@semantic-release/release-notes-generator",
                "@semantic-release/github",
                "@semantic-release/git"
              ]
            }' > .releaserc.json
          fi

      - name: Install dependencies
        run: |
          npm install --save-dev semantic-release @semantic-release/git @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/github

      - name: Run semantic-release
        run: |
          npx semantic-release
